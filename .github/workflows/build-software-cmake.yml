name: Build DigiLivolo software

on:
  push:
    # branches: [ main ]
    tags:
      - "v*.*.*"
  # pull_request:
    # branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
            binary_orig: digilivolo
          - windows-latest
            binary_orig: digilivolo.exe
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: windows-latest
            c_compiler: gcc
            binary_target: digilivolo-win-x86_64.exe
          - os: windows-latest
            c_compiler: clang
            # binary_orig: digilivolo.exe
            binary_target: digilivolo-win-clang-x86_64.exe
          - os: ubuntu-latest
            c_compiler: gcc
            # binary_orig: digilivolo
            binary_target: digilivolo-linux-x86_64
          - os: ubuntu-latest
            c_compiler: clang
            # binary_orig: digilivolo
            binary_target: digilivolo-linux-clang-x86_64

    steps:
    - uses: ConorMacBride/install-package@v1
      with:
        apt: libudev-dev
          
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Debug
      shell: bash
      run: |
        ls -l
        pwd
        echo "binary_orig: ${{ matrix.binary_orig }}"
        echo "binary_target: ${{ matrix.binary_target }}"

    - name: Install Ninja
      id: ninja
      uses: turtlesec-no/get-ninja@main

    - name: Configure CMake
      run: >
        cmake -B software/build
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DUSE_SYSTEM_HIDAPI=false
        -G Ninja
        -S ${{ github.workspace }}/software

    - name: Build
      run: cmake --build software/build

    - name: Rename binary
      shell: bash
      run: |
        mv software/build/${{ matrix.binary_orig }} software/build/${{ matrix.binary_target }}
        ls -l software/build/${{ matrix.binary_target }}
        file software/build/${{ matrix.binary_target }}

    - name: Make and upload release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        fail_on_unmatched_files: false
        generate_release_notes: true        
        make_latest: true
        files: |
          software/build/${{ matrix.binary_target }}
